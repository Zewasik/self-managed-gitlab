- name: Add Gitlab repositories for testtest user
  hosts: git_group

  tasks:
    - name: Install library for json_query
      become: true
      ansible.builtin.pip:
        name: jmespath
        executable: pip3.10
    - name: Wait for Gitlab running
      shell: while [ "`docker inspect -f \{\{.State.Health.Status\}\} gitlab`" != "healthy" ]; do sleep 2; done
    - name: Create new repositories (Inventory, Billing, Api Gateway, Infrastructure) for the user
      gitlab_project:
        api_url: "http://{{ hostvars[inventory_hostname].inventory_hostname }}"
        api_username: "{{ admin.username }}"
        api_password: "{{ password }}"
        name: "{{ item }}"
        state: present
      loop:
        - "Inventory-app"
        - "Billing-app"
        - "Api-gateway-app"
        - "Infrastructure-configuration"
      register: created_projects
    - name: Extract project IDs and store in a list
      set_fact:
        project_ids: "{{ created_projects.results | json_query('[].project.id') }}"
    - name: Create runners for projects
      community.general.gitlab_runner:
        api_url: "http://{{ hostvars[inventory_hostname].inventory_hostname }}"
        api_username: "{{ admin.username }}"
        api_password: "{{ password }}"
        description: "Docker Machine t1 for {{ item }}"
        state: present
        run_untagged: true
        project: "{{ item }}"
      register: return_value
      loop: "{{ project_ids }}"
    - name: Extract runners and store in a list
      set_fact:
        runners: "{{ return_value.results | json_query('[].runner') }}"
    - name: Create volume for runners
      community.docker.docker_volume:
        name: gitlab-runner-config
    - name: Create gitlab-runner instance using Docker
      community.docker.docker_container:
        name: gitlab-runner
        image: gitlab/gitlab-runner:latest
        detach: true
        restart_policy: always
        volumes:
          - gitlab-runner-config:/etc/gitlab-runner
          - /var/run/docker.sock:/var/run/docker.sock
    - name: Register runners using Docker
      community.docker.docker_container:
        name: "docker_runner_{{ item.id }}"
        image: gitlab/gitlab-runner
        auto_remove: true
        volumes:
          - gitlab-runner-config:/etc/gitlab-runner
        command: >
          register 
          --non-interactive 
          --url "http://{{ hostvars[inventory_hostname].inventory_hostname }}/" 
          --token "{{ item.token }}" 
          --executor "docker" 
          --docker-image alpine:latest 
          --description "docker-runner-{{ item.id }}"
      loop: "{{ runners }}"
