workflow:
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "merge_request_event"
      when: never
    - when: always

stages:
  - build
  - test
  - scan
  - containerization
  - deploy

variables:
  IMAGE_NAME: $DOCKER_USER/api-gateway-app

.dind:
  image: docker:25
  services:
    - name: docker:25-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_DRIVER: overlay2

build_app:
  stage: build
  image: node:18.16
  before_script:
    - npm install
  script:
    - npm run build
  artifacts:
    paths:
      - "build"

run_linter:
  stage: test
  image: node:18.16
  dependencies: []
  before_script:
    - npm install
  script:
    - npm run lint

analyze_vulnerabilities:
  stage: scan
  image: node:18.16
  dependencies: []
  before_script:
    - npm install
    - npx snyk auth $SNYK_TOKEN
  script:
    - npx snyk test --json | npx snyk-to-html -o snyk_results.html
  artifacts:
    when: always
    paths:
      - snyk_results.html

container_app:
  extends: .dind
  only:
    - main
  stage: containerization
  needs:
    - build_app
    - job: analyze_vulnerabilities
      artifacts: false
  before_script:
    - apk add --no-cache jq curl
    - export IMAGE_TAG=$(cat package.json | jq -r .version)
    - sh post-or-update-group-vars.sh TF_VAR_API_GATEWAY_APP_IMAGE $IMAGE_NAME $IMAGE_TAG
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG

trigger_deploy:
  stage: deploy
  allow_failure: true
  needs:
    - container_app
  trigger:
    project: movie-service/Infrastructure-configuration
    strategy: depend
    forward:
      yaml_variables: true
      pipeline_variables: true
